// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "11/06/2022 13:53:59"

// 
// Device: Altera EP4CE10F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module decoder2_4 (
	key1,
	key2,
	out);
input 	key1;
input 	key2;
output 	[3:0] out;

// Design Ports Information
// out[0]	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out[1]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out[2]	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out[3]	=>  Location: PIN_N3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// key1	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// key2	=>  Location: PIN_M1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("decoder2_4_8_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \out[0]~output_o ;
wire \out[1]~output_o ;
wire \out[2]~output_o ;
wire \out[3]~output_o ;
wire \key1~input_o ;
wire \key2~input_o ;
wire \Decoder0~0_combout ;
wire \Decoder0~1_combout ;
wire \Decoder0~2_combout ;
wire \Decoder0~3_combout ;


// Location: IOOBUF_X11_Y0_N9
cycloneive_io_obuf \out[0]~output (
	.i(\Decoder0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[0]~output .bus_hold = "false";
defparam \out[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N9
cycloneive_io_obuf \out[1]~output (
	.i(!\Decoder0~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[1]~output .bus_hold = "false";
defparam \out[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N16
cycloneive_io_obuf \out[2]~output (
	.i(!\Decoder0~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[2]~output .bus_hold = "false";
defparam \out[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N23
cycloneive_io_obuf \out[3]~output (
	.i(!\Decoder0~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[3]~output .bus_hold = "false";
defparam \out[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \key1~input (
	.i(key1),
	.ibar(gnd),
	.o(\key1~input_o ));
// synopsys translate_off
defparam \key1~input .bus_hold = "false";
defparam \key1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N22
cycloneive_io_ibuf \key2~input (
	.i(key2),
	.ibar(gnd),
	.o(\key2~input_o ));
// synopsys translate_off
defparam \key2~input .bus_hold = "false";
defparam \key2~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y3_N8
cycloneive_lcell_comb \Decoder0~0 (
// Equation(s):
// \Decoder0~0_combout  = (\key1~input_o ) # (\key2~input_o )

	.dataa(\key1~input_o ),
	.datab(gnd),
	.datac(\key2~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\Decoder0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~0 .lut_mask = 16'hFAFA;
defparam \Decoder0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y3_N2
cycloneive_lcell_comb \Decoder0~1 (
// Equation(s):
// \Decoder0~1_combout  = (\key1~input_o  & !\key2~input_o )

	.dataa(\key1~input_o ),
	.datab(gnd),
	.datac(\key2~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\Decoder0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~1 .lut_mask = 16'h0A0A;
defparam \Decoder0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y3_N28
cycloneive_lcell_comb \Decoder0~2 (
// Equation(s):
// \Decoder0~2_combout  = (!\key1~input_o  & \key2~input_o )

	.dataa(\key1~input_o ),
	.datab(gnd),
	.datac(\key2~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\Decoder0~2_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~2 .lut_mask = 16'h5050;
defparam \Decoder0~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y3_N6
cycloneive_lcell_comb \Decoder0~3 (
// Equation(s):
// \Decoder0~3_combout  = (\key1~input_o  & \key2~input_o )

	.dataa(\key1~input_o ),
	.datab(gnd),
	.datac(\key2~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\Decoder0~3_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~3 .lut_mask = 16'hA0A0;
defparam \Decoder0~3 .sum_lutc_input = "datac";
// synopsys translate_on

assign out[0] = \out[0]~output_o ;

assign out[1] = \out[1]~output_o ;

assign out[2] = \out[2]~output_o ;

assign out[3] = \out[3]~output_o ;

endmodule
